---
description: |
  The programmer at SmallBucket wanted to apply a discount of 10\% to all items in the shopping list before displaying the final list and total price. The \lstinline{shopping_list} is a list of tuples where the first element is the name and the second one the price. Identify the error. Fix the code.

  \begin{lstlisting}
  def discount(item):
      name, price = item
      return (name, price * 0.9)
  discounted = map(discount, shopping_list)
  print("Your list is", list(discounted))
  print("Total Payable:", sum(discounted))
  \end{lstlisting}

marks: 2
---
description: |
  Write down the sequence \lstinline{enumerate(map(succ, range(10)))}, where \lstinline{succ} is the function that returns $n+1$ given $n$?

marks: 1
---
description: |
  What is printed?

  \begin{lstlisting}
  x = 3
  def f(y):
    global x
    x = x + y
  xs = map(f, range(1, 10))
  print(x)
  \end{lstlisting}

options:
  - \lstinline{3}
  - \lstinline{48}
  - \lstinline{4}
  - \lstinline{5}

marks: \half
---
description: |
  What is printed?

  \begin{lstlisting}
  x = 3
  def f(y):
    global x
    x = x + y
  for x in range(1, 10):
    f(x)
  print(x)
  \end{lstlisting}

options:
  - \lstinline{18}
  - \lstinline{48}
  - \lstinline{3}
  - \lstinline{4}

marks: \half
---
description: |
  What is printed?

  \begin{lstlisting}
  x = 3
  def f(y):
    global x
    x = x + y
  for y in range(1, 10):
    f(y)
  print(x)
  \end{lstlisting}

options:
  - \lstinline{48}
  - \lstinline{18}
  - \lstinline{3}
  - \lstinline{4}

marks: \half
---
description: |
  What is printed?

  \begin{lstlisting}
  x = 4
  def f(x):
    return x + x
  y = f(3)
  z = f(y)
  print(x, y, z)
  \end{lstlisting}

options:
  - \lstinline{4 6 12}
  - \lstinline{Error}
  - \lstinline{12 6 12}
  - \lstinline{4 8 8}

marks: \half
---
description: |
  What is printed?

  \begin{lstlisting}
  x = [1]
  def f(x):
    return x + x
  y = f([3])
  z = f(y)
  print(x, y, z)
  \end{lstlisting}

options:
  - \lstinline{[1] [3, 3] [3, 3, 3, 3]}
  - \lstinline{Error}
  - \lstinline{[1] [3, 3] [3, 3]}
  - \lstinline{[3, 3, 3, 3] [3, 3] [3, 3, 3, 3]}

marks: \half
---
description: |
  What is printed?

  \begin{lstlisting}
  x = [1]
  def f(x):
    x.append(x.copy())
    return x
  y = f([3])
  z = f(y)
  print(x, y, z)
  \end{lstlisting}

options:
  - \lstinline{[1] [3, [3], [3, [3]]] [3, [3], [3, [3]]]}
  - \lstinline{[1] [3, 3] [3, 3, 3, 3]}
  - \lstinline{[1] [3, [3]] [3, [3], [3, [3]]]}
  - \lstinline{Error}

marks: \half
---
description: |
  Will something get printed or an error occur when you run the following code? If no error, what gets printed? If error, what is the error? Explain your reasoning.

  \begin{lstlisting}
  y = 0
  def f(x):
    if x > 0:
      y = y + x
    return y
  print(f(-3))
  \end{lstlisting}

marks: 1
---
description: |
  What is printed?

  \begin{lstlisting}
  y = 3
  def f(x):
    global y
    def g(y):
      nonlocal x
      return y + x
    return g(x) + y
  print(f(4))
  \end{lstlisting}

options:
  - \lstinline{11}
  - \lstinline{10}
  - \lstinline{9}
  - \lstinline{9}

marks: 1